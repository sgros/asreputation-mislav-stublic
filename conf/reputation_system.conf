######################################
[basic]
# DNS pcap file name (must be placed in current directory)
pcap_file = dns.pcap-20101016

# DNSBL file name (must be placed in /data directory)
dnsbl_file = dnsbllist

# IP to AS file name genareted by reputation calculation (must be placed in 
# /data directory)
IP_AS_file = ip_to_as

# local DNS server that will be omitted from reputation calculation
local_DNS = False

local_DNS_IP = 161.53.65.11

# networks that will be omitted from reputation calculation
my_networks = True

# my networks file name (must be placed in /data directory) 
my_networks_file = my_networks_metronet_ab

######################################
[analyses]

basic_error_analysis = True

negative_answer_analysis = True

positive_aspects_analysis = True

all_traffic_penalties = True

penalize_ttl = True

######################################
[parameters]

# ttl is represented in seconds
# ttl_low is upper limit for low ttl, ttl_medium is upper limit for medium ttl
# ttl_high would be everything higher than ttl_medium limit
# 86400 is 1 day (default low limit), 604800 is 1 week (default medium limit)
ttl_low = 86400

ttl_medium = 604800

# time divisor, values - 1, 2, 3, 4, 6, 8, 12, 24. Represents divisor for a 24
# hours period (24/time_divisor). If time divisor is 1 new reputation 
# calculation period is one day, if divisor is 24 new reputation calculation 
# period is 1 hour
time_divisor = 1

# reputation function's (R) alpha parameter (decay factor)
alpha = 0.7

######################################
[functions]

# choose Rw summation function options - Rw1, Rw2, Rw3, Rw4, Rw5, Rw_all.
# Values - True, False:
# 
# Rw1 - new Rw is calculated using only the number occurrences of 
# specific error and their severity:
# Rw1 = b0*r0 + b1*r1 + ... + bn*rn
#
# Rw2 - new Rw is normalized by number of DNS packets per AS:
# Rw2 = (b0*r0 + b1*r1 + ... + bn*rn)/(number of packets)
# if there are no errors but there is traffic Rw2 = -1
# if there is no traffic Rw2 = 0
#
# Rw4 - new Rw is normalized by summation of number of errors not including
# traffic as errors:
# Rw4 = (b0*r0 + b1*r1 + ... + bn*rn)/(r0 + r1 + ... + rn)
# if there are no errors but there is traffic Rw4 = -1
# if there is no traffic Rw4 = 0
#
# Rw3 - new Rw3 is normalized by summation of number of errors including
# traffic as errors:
# Rw3 = (b0*r0 + b1*r1 + ... + bn*rn)/(r0 + r1 + ... + rn)
# if there are no errors but there is traffic Rw3 = -1
# if there is no traffic Rw3 = 0
#
# Rw5 - new Rw5 is normalized by error ratio:
# Rw5 = (b0*r0 + b1*r1 + ... + bn*rn) * (r0 + r1 + ... + rn)/(number of packets)
#
# Rw_all - to use all available functions set Rw_all = True
#
# Rw1 is always true because it is used in all other functions

Rw2 = False

Rw4 = False

Rw3 = False

Rw5 = False

Rw_all = True
 
######################################
# filters values form r function's beta parameters
[client]

filter_unknown_tld = -60

filter_afora = -60

filter_rfc1918 = -50

filter_invalid_qname = -30

filter_rr_types = -30

filter_obsolete_opcode = -30

filter_unknown_query_class = -40

filter_obsolete_query_class = -30

filter_port_0 = -30

# negative answer filters
format-error = -40

server-failure = -10

not-implemented = -30

refused = -20

name-error = -15

# DNSBL positive penalties
dnsbl = 20

# penalties for all DNS traffic including ttl penalization
all_traffic = -1

ttl_low = 0

ttl_medium = -2

ttl_high = -3

#####################################
[server]

filter_unknown_tld = 0

filter_afora = 0

filter_rfc1918 = 0

filter_invalid_qname = 0

filter_rr_types = -30

filter_obsolete_opcode = -30

filter_unknown_query_class = 0

filter_obsolete_query_class = -30

filter_port_0 = -20

# negative answer filters
format-error = -10

server-failure = -20

not-implemented = -20

refused = -5

name-error = -5

# DNSBL positive penalties
dnsbl = 10

# penalties for all DNS traffic including ttl penalization
all_traffic = -1

ttl_low = -3

ttl_medium = -1

ttl_high = 0
